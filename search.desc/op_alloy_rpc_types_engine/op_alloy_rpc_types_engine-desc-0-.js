searchState.loadedDescShard("op_alloy_rpc_types_engine", 0, "op-alloy-rpc-types-engine\nConverts a payload into its most inner ExecutionPayloadV1.\nFailed to decode the op_alloy_protocol::L1BlockInfoTx from …\nFailed to decode the op_alloy_protocol::L1BlockInfoTx from …\nChain genesis information.\nThis structure maps on the ExecutionPayload structure of …\nThe first payload transaction is not a deposit transaction.\nThe first payload transaction is not a deposit transaction.\nThe genesis block hash does not match the expected value.\nThe genesis block hash does not match the expected value.\nAn invalid length was encountered.\nL2 Block Header Info\nThe L2 block is missing the L1 info deposit transaction.\nThe L2 block is missing the L1 info deposit transaction.\nMissing system config in the genesis block.\nOptimism Payload Attributes with parent block reference.\nThis structure maps for the return value of …\nThis structure maps for the return value of …\nOptimism Payload Attributes\nDefines conversion utility methods for Optimism-specific …\nFormatted Superchain Protocol Version.\nAn error that can occur when encoding or decoding a …\nThe Protocol Version V0 format. Encoded as 31 bytes with …\nThe Rollup configuration.\nSuperchain Signal information.\nSystem configuration.\nAn error that can occur when converting an …\nAn error that can occur when converting an …\nFailed to convert slice to array.\nFailed to decode the first transaction into an …\nFailed to decode the first transaction into an …\nThe first payload transaction has an unexpected type.\nThe first payload transaction has an unexpected type.\nAn unsupported version was encountered.\nVersion-type 0.\nConverts the payload into its most inner ExecutionPayloadV1…\nOptimism-specific payload attributes.\nThe payload attributes.\nBase Fee Params\nThe base fee per gas of the block.\nBase fee scalar value\n<code>batch_inbox_address</code> is the L1 address that batches are …\nBatcher address\nBlob base fee scalar value\nThe blobs, commitments, and proofs associated with the …\nThe blobs, commitments, and proofs associated with the …\n<code>blobs_enabled_l1_timestamp</code> is the timestamp to start …\nThe block hash of the block.\nThe base BlockInfo\nReturns the block number and hash as a <code>BlockNumHash</code>.\nThe block number.\nThe block time of the L2, in seconds.\nThe expected value to be received by the feeRecipient in …\nThe expected value to be received by the feeRecipient in …\nDifferentiates forks and custom-builds of standard protocol\nBase fee params post-canyon hardfork\n<code>canyon_time</code> sets the activation time of the Canyon network …\nReturns the channel timeout for the given timestamp.\nNumber of L1 blocks between when a channel can be opened …\nChecks the scalar value in Ecotone.\n<code>da_challenge_address</code> is the L1 address that the data …\n<code>delta_time</code> sets the activation time of the Delta network …\n<code>deposit_contract_address</code> is the L1 address that deposits …\n<code>ecotone_time</code> sets the activation time of the Ecotone …\nError types for conversions between Optimism Execution …\nExecution payload V3\nExecution payload V4\nThe extra data of the block.\nThe fee recipient of the block.\n<code>fjord_time</code> sets the activation time of the Fjord network …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs an L2BlockInfo from a given OpBlock and …\nReturns the RollupConfig for the given L2 chain ID.\nIf set, this sets the exact gas limit the block produced …\nGas limit value\nThe gas limit of the block.\nThe gas used of the block.\nThe genesis state of the rollup.\nThe channel timeout after the Granite hardfork.\n<code>granite_time</code> sets the activation time for the Granite …\n<code>holocene_time</code> sets the activation time for the Holocene …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if a DA Challenge proxy Address is provided …\nReturns true if Canyon is active at the given timestamp.\nReturns true if Delta is active at the given timestamp.\nReturns true if Ecotone is active at the given timestamp.\nReturns true if Fjord is active at the given timestamp.\nReturns true if Granite is active at the given timestamp.\nReturns true if Holocene is active at the given timestamp.\nWhether the current batch is the last in its span.\nReturns true if Regolith is active at the given timestamp.\nL1 genesis block\nThe L1 chain ID\nThe L1 origin BlockNumHash\n<code>l1_system_config_address</code> is the L1 address that the system …\nL2 genesis block\nThe L2 chain ID\nTimestamp of the L2 genesis block\nThe logs bloom of the block.\nIncompatible API changes\nReturns the max rlp bytes per channel for the given …\nReturns the max sequencer drift for the given timestamp.\nSequencer batches may not be more than MaxSequencerDrift …\nIdentifies additional functionality in backwards …\nInstantiates a new L2BlockInfo.\nIf true, the no transactions are taken out of the tx-pool, …\nFee overhead value\nThe parent block reference.\nEcotone parent beacon block root\nEcotone parent beacon block root\nThe parent hash of the block.\nIdentifies backward-compatible bug-fixes\nThe payload attributes\nOptimism execution payload envelope V3.\nOptimism execution payload envelope V3.\nIdentifies unstable versions that may not satisfy the above\nThe previous randao of the block.\n<code>protocol_versions_address</code> is the L1 address that the …\nThe receipts root of the block.\nThe recommended Supercain Protocol Version.\n<code>regolith_time</code> sets the activation time of the Regolith …\nThe minimum Supercain Protocol Version required.\nFee scalar value\nThe sequence number of the L2 block\nThe sequencer window size.\nIntroduced in V3, this represents a suggestion from the …\nIntroduced in V3, this represents a suggestion from the …\nThe state root of the block.\nThe superchain config address.\nOptional System configuration\nThe timestamp of the block.\nConverts the payload into an L2BlockInfo.\nConverts the payload into a SystemConfig.\nTransactions is a field for rollups: the transactions list …\nThe transactions of the block.\nFilters all L1 receipts to find config updates and applies …\nThe expected length.\nThe length that was encountered.\nOptimism Payload Attributes with parent block reference.\nOptimism Payload Attributes\nReturns the payload attributes.\nThe payload attributes.\nReturns the argument unchanged.\nReturns the argument unchanged.\nIf set, this sets the exact gas limit the block produced …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether the current batch is the last in its span.\nWhether the current batch is the last in its span.\nCreate a new OptimismAttributesWithParent instance.\nIf true, the no transactions are taken out of the tx-pool, …\nReturns the parent block reference.\nThe parent block reference.\nThe payload attributes\nTransactions is a field for rollups: the transactions list …\nFailed to decode the op_alloy_protocol::L1BlockInfoTx from …\nFailed to decode the op_alloy_protocol::L1BlockInfoTx from …\nThe first payload transaction is not a deposit transaction.\nThe first payload transaction is not a deposit transaction.\nThe genesis block hash does not match the expected value.\nThe genesis block hash does not match the expected value.\nThe L2 block is missing the L1 info deposit transaction.\nThe L2 block is missing the L1 info deposit transaction.\nMissing system config in the genesis block.\nAn error that can occur when converting an …\nAn error that can occur when converting an …\nFailed to decode the first transaction into an …\nFailed to decode the first transaction into an …\nThe first payload transaction has an unexpected type.\nThe first payload transaction has an unexpected type.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis structure maps for the return value of …\nReturns the inner ExecutionPayloadV1 from the envelope.\nThe blobs, commitments, and proofs associated with the …\nThe expected value to be received by the feeRecipient in …\nExecution payload V3\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nEcotone parent beacon block root\nIntroduced in V3, this represents a suggestion from the …\nThis structure maps for the return value of …\nReturns the inner ExecutionPayloadV1 from the envelope.\nThe blobs, commitments, and proofs associated with the …\nThe expected value to be received by the feeRecipient in …\nExecution payload V4\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nEcotone parent beacon block root\nIntroduced in V3, this represents a suggestion from the …\nAn invalid length was encountered.\nFormatted Superchain Protocol Version.\nAn error that can occur when encoding or decoding a …\nThe Protocol Version V0 format. Encoded as 31 bytes with …\nSuperchain Signal information.\nFailed to convert slice to array.\nAn unsupported version was encountered.\nVersion-type 0.\nReturns the inner value of the ProtocolVersion enum if it …\nDifferentiates forks and custom-builds of standard protocol\nDifferentiates forks and custom-builds of standard protocol\nVersion-type 0 byte decoding:\nVersion-type 0 byte encoding:\nReturns a human-readable string representation of the …\nVersion-type 0 byte encoding:\nVersion-type 0 byte encoding:\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the inner value of the ProtocolVersion enum\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the build tag is human-readable, false …\nIncompatible API changes\nIncompatible API changes\nIdentifies additional functionality in backwards …\nIdentifies additional functionality in backwards …\nIdentifies backward-compatible bug-fixes\nIdentifies backward-compatible bug-fixes\nIdentifies unstable versions that may not satisfy the above\nIdentifies unstable versions that may not satisfy the above\nThe recommended Supercain Protocol Version.\nThe minimum Supercain Protocol Version required.\nThe expected length.\nThe length that was encountered.")